pipeline {
    agent {
        dockerfile {
            filename 'build.Dockerfile'
            dir 'Jenkins'
            label 'devops1-cm'
            args '-v $HOME/.netrc:/home/dockeruser/.netrc -v /home/cm/certs/:/home/dockeruser/certs'
        }
    }
    stages {
        stage('Checkout') {
            steps {

                sh label: '', script: 'rm -rf *'       

                sh('mkdir hitide-ui')

                checkout([
                    $class: 'GitSCM',
                    branches: [[name: 'refs/heads/develop']], 
                    extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'hitide-ui']],
                    userRemoteConfigs: [[url: 'git@github.com:podaac/hitide-ui.git', credentialsId:'github.com_devops']]
                ])

                sh('ls -la hitide-ui')
            }
        }
        stage('Sync txt'){
            steps{
                script{

                    UAT_TOKEN = sh(returnStdout: true, script:'jq -r .token /home/dockeruser/certs/launchpad_token_ngap_uat.json').trim()
                    OPS_TOKEN = sh(returnStdout: true, script:'jq -r .token /home/dockeruser/certs/launchpad_token_ngap_ops.json').trim()

                    UAT_COLLECTION = sh(returnStdout: true, script:"set +x; cmr_association_diff -e uat -t tool -a $WORKSPACE/hitide-ui/cmr/uat_associations.txt -p POCLOUD -n \'HiTIDE\' -o $WORKSPACE/uat_output_json.txt --token $UAT_TOKEN; set -x").trim()

                    OPS_COLLECTION = sh(returnStdout: true, script:"set +x; cmr_association_diff -e ops -t tool -a $WORKSPACE/hitide-ui/cmr/ops_associations.txt -p POCLOUD -n \'HiTIDE\' -o $WORKSPACE/ops_output_json.txt --token $OPS_TOKEN; set -x").trim()

                    if(OPS_COLLECTION || UAT_COLLECTION){
                        dir("temp"){

                            withCredentials([sshUserPrivateKey(credentialsId: "github.com_devops", keyFileVariable: "SSH_KEY")]){

                                checkout([
                                    $class: 'GitSCM',
                                    branches: [[name: 'develop']], 
                                    userRemoteConfigs: [[url: 'git@github.com:podaac/hitide-ui.git', credentialsId:'github.com_devops']]
                                ])

                                update_git_message = "Adding collections"

                                if(UAT_COLLECTION){
                                    sh(script: "python -u $WORKSPACE/hitide-ui/Jenkins/read_collection.py -e uat -i $WORKSPACE/uat_output_json.txt -o $WORKSPACE")

                                    uat_success_collection = sh(returnStdout: true, script: "echo \$(cat $WORKSPACE/uat_success.txt)").trim()
                                    update_git_message = update_git_message + " UAT: " + uat_success_collection
                                    sh('cat $WORKSPACE/uat_success.txt >> ./cmr/uat_associations.txt')
                                }
                                if(OPS_COLLECTION){
                                    sh(script: "python -u $WORKSPACE/hitide-ui/Jenkins/read_collection.py -e ops -i $WORKSPACE/ops_output_json.txt -o $WORKSPACE")

                                    ops_success_collection = sh(returnStdout: true, script: "echo \$(cat $WORKSPACE/ops_success.txt)").trim()
                                    update_git_message = update_git_message + " OPS: " + ops_success_collection
                                    sh('cat $WORKSPACE/ops_success.txt >> ./cmr/ops_associations.txt')
                                }
                                
                                sh("""
                                    mkdir ~/.ssh
                                    touch ~/.ssh/known_hosts
                                    ssh-keyscan -H github.com >> ~/.ssh/known_hosts
                                    export GIT_SSH_COMMAND="ssh -i $SSH_KEY"
                                    git config --local user.name "podaac"
                                    git config --local user.email podaac-tva@jpl.nasa.gov
                                    git commit -a -m \'$update_git_message\'
                                    git push origin HEAD:develop
                                """)
                            }
                            deleteDir()
                        }
                    }
                }
            }
        }
    }
}